/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The details of a Managed Database.
    /// </summary>
    public class ManagedDatabase 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Managed Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The name of the Managed Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// The type of Oracle Database installation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseType is required.")]
        [JsonProperty(PropertyName = "databaseType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DatabaseType> DatabaseType { get; set; }
        
        /// <value>
        /// The subtype of the Oracle Database. Indicates whether the database is a Container Database,
        /// Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseSubType is required.")]
        [JsonProperty(PropertyName = "databaseSubType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DatabaseSubType> DatabaseSubType { get; set; }
        
        /// <value>
        /// The infrastructure used to deploy the Oracle Database.
        /// </value>
        [JsonProperty(PropertyName = "deploymentType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DeploymentType> DeploymentType { get; set; }
        
        /// <value>
        /// The management option used when enabling Database Management.
        /// </value>
        [JsonProperty(PropertyName = "managementOption")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ManagementOption> ManagementOption { get; set; }
        
        /// <value>
        /// The workload type of the Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "workloadType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<WorkloadType> WorkloadType { get; set; }
        
        /// <value>
        /// Indicates whether the Oracle Database is part of a cluster.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsCluster is required.")]
        [JsonProperty(PropertyName = "isCluster")]
        public System.Nullable<bool> IsCluster { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the parent Container Database
        /// if Managed Database is a Pluggable Database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "parentContainerId")]
        public string ParentContainerId { get; set; }
        
        /// <value>
        /// A list of Managed Database Groups that the Managed Database belongs to.
        /// </value>
        [JsonProperty(PropertyName = "managedDatabaseGroups")]
        public System.Collections.Generic.List<ParentGroup> ManagedDatabaseGroups { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the DB system that this Managed Database is part of.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbSystemId")]
        public string DbSystemId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the storage DB system.
        /// </value>
        [JsonProperty(PropertyName = "storageSystemId")]
        public string StorageSystemId { get; set; }
        
        /// <value>
        /// The date and time the Managed Database was created.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The Oracle Database version.
        /// </value>
        [JsonProperty(PropertyName = "databaseVersion")]
        public string DatabaseVersion { get; set; }
        
        /// <value>
        /// The status of the Oracle Database. Indicates whether the status of the database
        /// is UP, DOWN, or UNKNOWN at the current time.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "databaseStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DatabaseStatus> DatabaseStatus { get; set; }
        
        /// <value>
        /// The name of the parent Container Database.
        /// </value>
        [JsonProperty(PropertyName = "parentContainerName")]
        public string ParentContainerName { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment
        /// in which the parent Container Database resides, if the Managed Database
        /// is a Pluggable Database (PDB).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "parentContainerCompartmentId")]
        public string ParentContainerCompartmentId { get; set; }
        
        /// <value>
        /// The number of Oracle Real Application Clusters (Oracle RAC) database instances.
        /// </value>
        [JsonProperty(PropertyName = "instanceCount")]
        public System.Nullable<int> InstanceCount { get; set; }
        
        /// <value>
        /// The details of the Oracle Real Application Clusters (Oracle RAC) database instances.
        /// </value>
        [JsonProperty(PropertyName = "instanceDetails")]
        public System.Collections.Generic.List<InstanceDetails> InstanceDetails { get; set; }
        
        /// <value>
        /// The number of PDBs in the Container Database.
        /// </value>
        [JsonProperty(PropertyName = "pdbCount")]
        public System.Nullable<int> PdbCount { get; set; }
        
        /// <value>
        /// The status of the PDB in the Container Database.
        /// </value>
        [JsonProperty(PropertyName = "pdbStatus")]
        public System.Collections.Generic.List<PdbStatusDetails> PdbStatus { get; set; }
        
        /// <value>
        /// The additional details specific to a type of database defined in `{\"key\": \"value\"}` format.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "additionalDetails")]
        public System.Collections.Generic.Dictionary<string, string> AdditionalDetails { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// System tags can be viewed by users, but can only be created by the system.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
        /// <value>
        /// The list of feature configurations
        /// </value>
        [JsonProperty(PropertyName = "dbmgmtFeatureConfigs")]
        public System.Collections.Generic.List<DatabaseFeatureConfiguration> DbmgmtFeatureConfigs { get; set; }
        
        /// <value>
        /// The operating system of database.
        /// </value>
        [JsonProperty(PropertyName = "databasePlatformName")]
        public string DatabasePlatformName { get; set; }
        
    }
}
