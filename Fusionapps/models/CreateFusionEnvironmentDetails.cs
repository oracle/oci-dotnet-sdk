/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FusionappsService.Models
{
    /// <summary>
    /// The configuration details of the FusionEnvironment. For more information about these fields, see [Managing Environments](https://docs.cloud.oracle.com/iaas/Content/fusion-applications/manage-environment.htm).
    /// </summary>
    public class CreateFusionEnvironmentDetails 
    {
        
        /// <value>
        /// FusionEnvironment Identifier can be renamed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        [JsonProperty(PropertyName = "maintenancePolicy")]
        public MaintenancePolicy MaintenancePolicy { get; set; }
        
        /// <value>
        /// The unique identifier (OCID) of the compartment where the Fusion Environment is located.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The unique identifier (OCID) of the Fusion Environment Family that the Fusion Environment belongs to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FusionEnvironmentFamilyId is required.")]
        [JsonProperty(PropertyName = "fusionEnvironmentFamilyId")]
        public string FusionEnvironmentFamilyId { get; set; }
        
        /// <value>
        /// The type of environment. Valid values are Production, Test, or Development.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FusionEnvironmentType is required.")]
        [JsonProperty(PropertyName = "fusionEnvironmentType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<FusionEnvironment.FusionEnvironmentTypeEnum> FusionEnvironmentType { get; set; }
        
        /// <value>
        /// byok kms keyId
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// DNS prefix.
        /// </value>
        [JsonProperty(PropertyName = "dnsPrefix")]
        public string DnsPrefix { get; set; }
        
        /// <value>
        /// Language packs.
        /// </value>
        [JsonProperty(PropertyName = "additionalLanguagePacks")]
        public System.Collections.Generic.List<string> AdditionalLanguagePacks { get; set; }
        
        /// <value>
        /// Enable IPv4/IPv6 dual stack support for the environment.  Setting to true will assign an IPv6 address to the environment in addition to an IPv4 address. Default value will be false if not set
        /// </value>
        [JsonProperty(PropertyName = "isIPv6DualStackEnabled")]
        public System.Nullable<bool> IsIPv6DualStackEnabled { get; set; }
        
        /// <value>
        /// Rules.
        /// </value>
        [JsonProperty(PropertyName = "rules")]
        public System.Collections.Generic.List<Rule> Rules { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CreateFusionEnvironmentAdminUserDetails is required.")]
        [JsonProperty(PropertyName = "createFusionEnvironmentAdminUserDetails")]
        public CreateFusionEnvironmentAdminUserDetails CreateFusionEnvironmentAdminUserDetails { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
