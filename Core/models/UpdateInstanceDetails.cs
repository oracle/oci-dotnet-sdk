/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CoreService.Models
{
    
    public class UpdateInstanceDetails 
    {
        
        /// <value>
        /// Whether to enable AI enterprise on the instance.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAIEnterpriseEnabled")]
        public System.Nullable<bool> IsAIEnterpriseEnabled { get; set; }
        
        /// <value>
        /// The OCID of the compute capacity reservation this instance is launched under.
        /// You can remove the instance from a reservation by specifying an empty string as input for this field.
        /// For more information, see [Capacity Reservations](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/reserve-capacity.htm#default).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "capacityReservationId")]
        public string CapacityReservationId { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// [Security attributes](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/zpr-artifacts.htm#security-attributes) are labels
        /// for a resource that can be referenced in a [Zero Trust Packet Routing](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/overview.htm)
        /// (ZPR) policy to control access to ZPR-supported resources.
        /// <br/>
        /// Example: {&quot;Oracle-DataSecurity-ZPR&quot;: {&quot;MaxEgressCount&quot;: {&quot;value&quot;:&quot;42&quot;,&quot;mode&quot;:&quot;audit&quot;}}}
        /// </value>
        [JsonProperty(PropertyName = "securityAttributes")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SecurityAttributes { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no
        /// predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        [JsonProperty(PropertyName = "agentConfig")]
        public UpdateInstanceAgentConfigDetails AgentConfig { get; set; }
        
        /// <value>
        /// Custom metadata key/value string pairs that you provide. Any set of key/value pairs
        /// provided here will completely replace the current set of key/value pairs in the `metadata`
        /// field on the instance.
        /// <br/>
        /// The \"user_data\" field and the \"ssh_authorized_keys\" field cannot be changed after an instance
        /// has launched. Any request that updates, removes, or adds either of these fields will be
        /// rejected. You must provide the same values for \"user_data\" and \"ssh_authorized_keys\" that
        /// already exist on the instance.
        /// <br/>
        /// The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of
        /// 32,000 bytes.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "metadata")]
        public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
        
        /// <value>
        /// Additional metadata key/value pairs that you provide. They serve the same purpose and
        /// functionality as fields in the `metadata` object.
        /// <br/>
        /// They are distinguished from `metadata` fields in that these can be nested JSON objects
        /// (whereas `metadata` fields are string/string maps only).
        /// <br/>
        /// The \"user_data\" field and the \"ssh_authorized_keys\" field cannot be changed after an instance
        /// has launched. Any request that updates, removes, or adds either of these fields will be
        /// rejected. You must provide the same values for \"user_data\" and \"ssh_authorized_keys\" that
        /// already exist on the instance.
        /// <br/>
        /// The combined size of the `metadata` and `extendedMetadata` objects can be a maximum of
        /// 32,000 bytes.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "extendedMetadata")]
        public System.Collections.Generic.Dictionary<string, System.Object> ExtendedMetadata { get; set; }
        
        /// <value>
        /// The shape of the instance. The shape determines the number of CPUs and the amount of memory
        /// allocated to the instance. For more information about how to change shapes, and a list of
        /// shapes that are supported, see
        /// [Editing an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
        /// <br/>
        /// For details about the CPUs, memory, and other properties of each shape, see
        /// [Compute Shapes](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm).
        /// <br/>
        /// The new shape must be compatible with the image that was used to launch the instance. You
        /// can enumerate all available shapes and determine image compatibility by calling
        /// {@link #listShapes(ListShapesRequest) listShapes}.
        /// <br/>
        /// To determine whether capacity is available for a specific shape before you change the shape of an instance,
        /// use the {@link #createComputeCapacityReport(CreateComputeCapacityReportRequest) createComputeCapacityReport}
        /// operation.
        /// <br/>
        /// If the instance is running when you change the shape, the instance is rebooted.
        /// <br/>
        /// Example: VM.Standard2.1
        /// </value>
        [JsonProperty(PropertyName = "shape")]
        public string Shape { get; set; }
        
        [JsonProperty(PropertyName = "shapeConfig")]
        public UpdateInstanceShapeConfigDetails ShapeConfig { get; set; }
        
        [JsonProperty(PropertyName = "sourceDetails")]
        public UpdateInstanceSourceDetails SourceDetails { get; set; }
                ///
        /// <value>
        /// The parameter acts as a fail-safe to prevent unwanted downtime when updating a running instance.
        /// The default is ALLOW_DOWNTIME.
        /// * `ALLOW_DOWNTIME` - Compute might reboot the instance while updating the instance if a reboot is required.
        /// * `AVOID_DOWNTIME` - If the instance is in running state, Compute tries to update the instance without rebooting
        ///                   it. If the instance requires a reboot to be updated, an error is returned and the instance
        ///                   is not updated. If the instance is stopped, it is updated and remains in the stopped state.
        /// 
        /// </value>
        ///
        public enum UpdateOperationConstraintEnum {
            [EnumMember(Value = "ALLOW_DOWNTIME")]
            AllowDowntime,
            [EnumMember(Value = "AVOID_DOWNTIME")]
            AvoidDowntime
        };

        /// <value>
        /// The parameter acts as a fail-safe to prevent unwanted downtime when updating a running instance.
        /// The default is ALLOW_DOWNTIME.
        /// * `ALLOW_DOWNTIME` - Compute might reboot the instance while updating the instance if a reboot is required.
        /// * `AVOID_DOWNTIME` - If the instance is in running state, Compute tries to update the instance without rebooting
        ///                   it. If the instance requires a reboot to be updated, an error is returned and the instance
        ///                   is not updated. If the instance is stopped, it is updated and remains in the stopped state.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "updateOperationConstraint")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<UpdateOperationConstraintEnum> UpdateOperationConstraint { get; set; }
        
        [JsonProperty(PropertyName = "instanceOptions")]
        public InstanceOptions InstanceOptions { get; set; }
        
        /// <value>
        /// A fault domain is a grouping of hardware and infrastructure within an availability domain.
        /// Each availability domain contains three fault domains. Fault domains let you distribute your
        /// instances so that they are not on the same physical hardware within a single availability domain.
        /// A hardware failure or Compute hardware maintenance that affects one fault domain does not affect
        /// instances in other fault domains.
        /// <br/>
        /// To get a list of fault domains, use the
        /// {@link #listFaultDomains(ListFaultDomainsRequest) listFaultDomains} operation in the
        /// Identity and Access Management Service API.
        /// <br/>
        /// Example: FAULT-DOMAIN-1
        /// </value>
        [JsonProperty(PropertyName = "faultDomain")]
        public string FaultDomain { get; set; }
        
        [JsonProperty(PropertyName = "launchOptions")]
        public UpdateLaunchOptions LaunchOptions { get; set; }
        
        [JsonProperty(PropertyName = "availabilityConfig")]
        public UpdateInstanceAvailabilityConfigDetails AvailabilityConfig { get; set; }
        
        /// <value>
        /// For a VM instance, resets the scheduled time that the instance will be reboot migrated for
        /// infrastructure maintenance, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// If the instance hasn't been rebooted after this date, Oracle reboots the instance within 24 hours of the time
        /// and date that maintenance is due.
        /// <br/>
        /// To get the maximum possible date that a maintenance reboot can be extended,
        /// use {@link #getInstanceMaintenanceReboot(GetInstanceMaintenanceRebootRequest) getInstanceMaintenanceReboot}.
        /// <br/>
        /// Regardless of how the instance is stopped, this flag is reset to empty as soon as the instance reaches the
        /// Stopped state.
        /// <br/>
        /// To reboot migrate a bare metal instance, use the {@link #instanceAction(InstanceActionRequest) instanceAction} operation.
        /// <br/>
        /// For more information, see
        /// [Infrastructure Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/infrastructure-maintenance.htm).
        /// <br/>
        /// Example: 2018-05-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeMaintenanceRebootDue")]
        public System.Nullable<System.DateTime> TimeMaintenanceRebootDue { get; set; }
        
        /// <value>
        /// The OCID of the dedicated virtual machine host to place the instance on.
        /// Supported only if this VM instance was already placed on a dedicated virtual machine host
        /// - that is, you can't move an instance from on-demand capacity to dedicated capacity,
        /// nor can you move an instance from dedicated capacity to on-demand capacity.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dedicatedVmHostId")]
        public string DedicatedVmHostId { get; set; }
        
        [JsonProperty(PropertyName = "platformConfig")]
        public UpdateInstancePlatformConfig PlatformConfig { get; set; }
        
        /// <value>
        /// The list of liscensing configurations with target update values.
        /// </value>
        [JsonProperty(PropertyName = "licensingConfigs")]
        public System.Collections.Generic.List<UpdateInstanceLicensingConfig> LicensingConfigs { get; set; }
        
    }
}
