/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// An Oracle Autonomous Database.
    /// 
    /// </summary>
    public class AutonomousDwDatabase 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
        /// </value>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }
                ///
        /// <value>
        /// The current state of the Autonomous Database.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "PROVISIONING")]
            Provisioning,
            [EnumMember(Value = "AVAILABLE")]
            Available,
            [EnumMember(Value = "STOPPING")]
            Stopping,
            [EnumMember(Value = "STOPPED")]
            Stopped,
            [EnumMember(Value = "STARTING")]
            Starting,
            [EnumMember(Value = "TERMINATING")]
            Terminating,
            [EnumMember(Value = "TERMINATED")]
            Terminated,
            [EnumMember(Value = "UNAVAILABLE")]
            Unavailable,
            [EnumMember(Value = "RESTORE_IN_PROGRESS")]
            RestoreInProgress,
            [EnumMember(Value = "RESTORE_FAILED")]
            RestoreFailed,
            [EnumMember(Value = "BACKUP_IN_PROGRESS")]
            BackupInProgress,
            [EnumMember(Value = "SCALE_IN_PROGRESS")]
            ScaleInProgress,
            [EnumMember(Value = "AVAILABLE_NEEDS_ATTENTION")]
            AvailableNeedsAttention,
            [EnumMember(Value = "UPDATING")]
            Updating,
            [EnumMember(Value = "MAINTENANCE_IN_PROGRESS")]
            MaintenanceInProgress,
            [EnumMember(Value = "RESTARTING")]
            Restarting,
            [EnumMember(Value = "RECREATING")]
            Recreating,
            [EnumMember(Value = "ROLE_CHANGE_IN_PROGRESS")]
            RoleChangeInProgress,
            [EnumMember(Value = "UPGRADING")]
            Upgrading,
            [EnumMember(Value = "INACCESSIBLE")]
            Inaccessible,
            [EnumMember(Value = "STANDBY")]
            Standby
        };

        /// <value>
        /// The current state of the Autonomous Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// Information about the current lifecycle state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
        /// </value>
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }
        
        /// <value>
        /// KMS key lifecycle details.
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyLifecycleDetails")]
        public string KmsKeyLifecycleDetails { get; set; }
        
        [JsonProperty(PropertyName = "encryptionKey")]
        public AutonomousDatabaseEncryptionKeyDetails EncryptionKey { get; set; }
        
        /// <value>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyVersionId")]
        public string KmsKeyVersionId { get; set; }
        
        /// <value>
        /// The database name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DbName is required.")]
        [JsonProperty(PropertyName = "dbName")]
        public string DbName { get; set; }
        
        /// <value>
        /// The character set for the autonomous database.  The default is AL32UTF8. Allowed values are:
        /// <br/>
        /// AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
        /// 
        /// </value>
        [JsonProperty(PropertyName = "characterSet")]
        public string CharacterSet { get; set; }
        
        /// <value>
        /// The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are:
        /// AL16UTF16 or UTF8.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "ncharacterSet")]
        public string NcharacterSet { get; set; }
        
        /// <value>
        /// The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud@Customer platform.
        /// </value>
        [JsonProperty(PropertyName = "inMemoryPercentage")]
        public System.Nullable<int> InMemoryPercentage { get; set; }
        
        /// <value>
        /// The area assigned to In-Memory tables in Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "inMemoryAreaInGBs")]
        public System.Nullable<int> InMemoryAreaInGBs { get; set; }
        
        /// <value>
        /// The date and time when the next long-term backup would be created.
        /// </value>
        [JsonProperty(PropertyName = "nextLongTermBackupTimeStamp")]
        public System.Nullable<System.DateTime> NextLongTermBackupTimeStamp { get; set; }
        
        [JsonProperty(PropertyName = "longTermBackupSchedule")]
        public LongTermBackUpScheduleDetails LongTermBackupSchedule { get; set; }
        
        /// <value>
        /// Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isLocalDataGuardEnabled
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isFreeTier")]
        public System.Nullable<bool> IsFreeTier { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
        /// <value>
        /// The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeReclamationOfFreeAutonomousDatabase")]
        public System.Nullable<System.DateTime> TimeReclamationOfFreeAutonomousDatabase { get; set; }
        
        /// <value>
        /// The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeDeletionOfFreeAutonomousDatabase")]
        public System.Nullable<System.DateTime> TimeDeletionOfFreeAutonomousDatabase { get; set; }
        
        [JsonProperty(PropertyName = "backupConfig")]
        public AutonomousDatabaseBackupConfig BackupConfig { get; set; }
        
        /// <value>
        /// Key History Entry.
        /// </value>
        [JsonProperty(PropertyName = "keyHistoryEntry")]
        public System.Collections.Generic.List<AutonomousDatabaseKeyHistoryEntry> KeyHistoryEntry { get; set; }
        
        /// <value>
        /// Key History Entry.
        /// </value>
        [JsonProperty(PropertyName = "encryptionKeyHistoryEntry")]
        public System.Collections.Generic.List<AutonomousDatabaseEncryptionKeyHistoryEntry> EncryptionKeyHistoryEntry { get; set; }
        
        /// <value>
        /// The number of CPU cores to be made available to the database. When the ECPU is selected, the value for cpuCoreCount is 0. For Autonomous Database on Dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
        /// <br/>
        /// **Note:** This parameter cannot be used with the `ocpuCount` parameter.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "cpuCoreCount")]
        public System.Nullable<int> CpuCoreCount { get; set; }
        
        /// <value>
        /// Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
        /// </value>
        [JsonProperty(PropertyName = "localAdgAutoFailoverMaxDataLossLimit")]
        public System.Nullable<int> LocalAdgAutoFailoverMaxDataLossLimit { get; set; }
                ///
        /// <value>
        /// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
        /// </value>
        ///
        public enum ComputeModelEnum {
            [EnumMember(Value = "ECPU")]
            Ecpu,
            [EnumMember(Value = "OCPU")]
            Ocpu
        };

        /// <value>
        /// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
        /// </value>
        [JsonProperty(PropertyName = "computeModel")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ComputeModelEnum> ComputeModel { get; set; }
        
        /// <value>
        /// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. 
        /// The 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "computeCount")]
        public System.Nullable<float> ComputeCount { get; set; }
        
        /// <value>
        /// Retention period, in days, for long-term backups
        /// </value>
        [JsonProperty(PropertyName = "backupRetentionPeriodInDays")]
        public System.Nullable<int> BackupRetentionPeriodInDays { get; set; }
        
        /// <value>
        /// The backup storage to the database.
        /// </value>
        [JsonProperty(PropertyName = "totalBackupStorageSizeInGBs")]
        public System.Double TotalBackupStorageSizeInGBs { get; set; }
        
        /// <value>
        /// The number of OCPU cores to be made available to the database.
        /// <br/>
        /// The following points apply:
        /// - For Autonomous Databases on Dedicated Exadata Infrastructure, to provision less than 1 core, enter a fractional value in an increment of 0.1. For example, you can provision 0.3 or 0.4 cores, but not 0.35 cores. (Note that fractional OCPU values are not supported for Autonomous Database Serverless instances.)
        /// - To provision cores, enter an integer between 1 and the maximum number of cores available for the infrastructure shape. For example, you can provision 2 cores or 3 cores, but not 2.5 cores. This applies to Autonomous Databases on both serverless and dedicated Exadata infrastructure.
        /// - For Autonomous Database Serverless instances, this parameter is not used.
        /// <br/>
        /// For Autonomous Databases on Dedicated Exadata Infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbde/index.html) for shape details.
        /// <br/>
        /// **Note:** This parameter cannot be used with the `cpuCoreCount` parameter.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "ocpuCount")]
        public System.Nullable<float> OcpuCount { get; set; }
        
        /// <value>
        /// An array of CPU values that an Autonomous Database can be scaled to.
        /// </value>
        [JsonProperty(PropertyName = "provisionableCpus")]
        public System.Collections.Generic.List<float> ProvisionableCpus { get; set; }
        
        /// <value>
        /// The quantity of data in the database, in terabytes.
        /// <br/>
        /// The following points apply to Autonomous Databases on Serverless Infrastructure:
        /// - This is an integer field whose value remains null when the data size is in GBs and cannot be converted to TBs (by dividing the GB value by 1024) without rounding error.
        /// - To get the exact value of data storage size without rounding error, please see `dataStorageSizeInGBs` of Autonomous Database.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataStorageSizeInTBs is required.")]
        [JsonProperty(PropertyName = "dataStorageSizeInTBs")]
        public System.Nullable<int> DataStorageSizeInTBs { get; set; }
        
        /// <value>
        /// The amount of memory (in GBs rounded off to nearest integer value) enabled per ECPU or OCPU. This is deprecated. Please refer to memoryPerComputeUnitInGBs for accurate value.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "memoryPerOracleComputeUnitInGBs")]
        public System.Nullable<int> MemoryPerOracleComputeUnitInGBs { get; set; }
        
        /// <value>
        /// The amount of memory (in GBs) to be enabled per OCPU or ECPU.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "memoryPerComputeUnitInGBs")]
        public System.Nullable<float> MemoryPerComputeUnitInGBs { get; set; }
        
        /// <value>
        /// The quantity of data in the database, in gigabytes.
        /// <br/>
        /// For Autonomous Transaction Processing databases using ECPUs on Serverless Infrastructure, this value is always populated. In all the other cases, this value will be null and `dataStorageSizeInTBs` will be populated instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dataStorageSizeInGBs")]
        public System.Nullable<int> DataStorageSizeInGBs { get; set; }
        
        /// <value>
        /// The storage space consumed by Autonomous Database in GBs.
        /// </value>
        [JsonProperty(PropertyName = "usedDataStorageSizeInGBs")]
        public System.Nullable<int> UsedDataStorageSizeInGBs { get; set; }
                ///
        /// <value>
        /// The infrastructure type this resource belongs to.
        /// 
        /// </value>
        ///
        public enum InfrastructureTypeEnum {
            [EnumMember(Value = "CLOUD")]
            Cloud,
            [EnumMember(Value = "CLOUD_AT_CUSTOMER")]
            CloudAtCustomer
        };

        /// <value>
        /// The infrastructure type this resource belongs to.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "infrastructureType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<InfrastructureTypeEnum> InfrastructureType { get; set; }
        
        /// <value>
        /// True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isDedicated")]
        public System.Nullable<bool> IsDedicated { get; set; }
        
        /// <value>
        /// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm). Used only by Autonomous Database on Dedicated Exadata Infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "autonomousContainerDatabaseId")]
        public string AutonomousContainerDatabaseId { get; set; }
        
        /// <value>
        /// Indicates if the Autonomous Database is backup retention locked.
        /// </value>
        [JsonProperty(PropertyName = "isBackupRetentionLocked")]
        public System.Nullable<bool> IsBackupRetentionLocked { get; set; }
        
        /// <value>
        /// The date and time the Autonomous Database was most recently undeleted.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeUndeleted")]
        public System.Nullable<System.DateTime> TimeUndeleted { get; set; }
        
        /// <value>
        /// The earliest(min) date and time the Autonomous Database can be scheduled to upgrade to 23ai.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeEarliestAvailableDbVersionUpgrade")]
        public System.Nullable<System.DateTime> TimeEarliestAvailableDbVersionUpgrade { get; set; }
        
        /// <value>
        /// The max date and time the Autonomous Database can be scheduled to upgrade to 23ai.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLatestAvailableDbVersionUpgrade")]
        public System.Nullable<System.DateTime> TimeLatestAvailableDbVersionUpgrade { get; set; }
        
        /// <value>
        /// The date and time the Autonomous Database scheduled to upgrade to 23ai.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeScheduledDbVersionUpgrade")]
        public System.Nullable<System.DateTime> TimeScheduledDbVersionUpgrade { get; set; }
        
        /// <value>
        /// The date and time the Autonomous Database was created.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The user-friendly name for the Autonomous Database. The name does not have to be unique.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The URL of the Service Console for the Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "serviceConsoleUrl")]
        public string ServiceConsoleUrl { get; set; }
        
        /// <value>
        /// The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
        /// </value>
        [JsonProperty(PropertyName = "connectionStrings")]
        public AutonomousDatabaseConnectionStrings ConnectionStrings { get; set; }
        
        [JsonProperty(PropertyName = "connectionUrls")]
        public AutonomousDatabaseConnectionUrls ConnectionUrls { get; set; }
        
        /// <value>
        /// The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
        /// </value>
        [JsonProperty(PropertyName = "publicConnectionUrls")]
        public AutonomousDatabaseConnectionUrls PublicConnectionUrls { get; set; }
                ///
        /// <value>
        /// The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud.
        /// License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service.
        /// Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the
        /// Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, dataStorageSizeInTBs, adminPassword, isMTLSConnectionRequired, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        ///
        public enum LicenseModelEnum {
            [EnumMember(Value = "LICENSE_INCLUDED")]
            LicenseIncluded,
            [EnumMember(Value = "BRING_YOUR_OWN_LICENSE")]
            BringYourOwnLicense
        };

        /// <value>
        /// The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud.
        /// License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service.
        /// Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the
        /// Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, dataStorageSizeInTBs, adminPassword, isMTLSConnectionRequired, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "licenseModel")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LicenseModelEnum> LicenseModel { get; set; }
        
        /// <value>
        /// The maximum number of CPUs allowed with a Bring Your Own License (BYOL), including those used for auto-scaling, disaster recovery, tools, etc. Any CPU usage above this limit is considered as License Included and billed.
        /// </value>
        [JsonProperty(PropertyName = "byolComputeCountLimit")]
        public System.Nullable<float> ByolComputeCountLimit { get; set; }
        
        /// <value>
        /// The amount of storage that has been used for Autonomous Databases in dedicated infrastructure, in terabytes.
        /// </value>
        [JsonProperty(PropertyName = "usedDataStorageSizeInTBs")]
        public System.Nullable<int> UsedDataStorageSizeInTBs { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Security Attributes for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Oracle-ZPR&quot;: {&quot;MaxEgressCount&quot;: {&quot;value&quot;: &quot;42&quot;, &quot;mode&quot;: &quot;audit&quot;}}}
        /// </value>
        [JsonProperty(PropertyName = "securityAttributes")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SecurityAttributes { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
        /// <br/>
        /// **Subnet Restrictions:**
        /// - For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
        /// - For Exadata and virtual machine 2-node RAC systems, do not use a subnet that overlaps with 192.168.128.0/20.
        /// - For Autonomous Database, setting this will disable public secure access to the database.
        /// <br/>
        /// These subnets are used by the Oracle Clusterware private interconnect on the database instance.
        /// Specifying an overlapping subnet will cause the private interconnect to malfunction.
        /// This restriction applies to both the client subnet and the backup subnet.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }
        
        /// <value>
        /// The list of [OCIDs](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/Content/Network/Concepts/securityrules.htm).
        /// **NsgIds restrictions:**
        /// - A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "nsgIds")]
        public System.Collections.Generic.List<string> NsgIds { get; set; }
        
        /// <value>
        /// The private endpoint for the resource.
        /// </value>
        [JsonProperty(PropertyName = "privateEndpoint")]
        public string PrivateEndpoint { get; set; }
        
        /// <value>
        /// The public endpoint for the private endpoint enabled resource.
        /// </value>
        [JsonProperty(PropertyName = "publicEndpoint")]
        public string PublicEndpoint { get; set; }
        
        /// <value>
        /// The resource's private endpoint label.
        /// - Setting the endpoint label to a non-empty string creates a private endpoint database.
        /// - Resetting the endpoint label to an empty string, after the creation of the private endpoint database, changes the private endpoint database to a public endpoint database.
        /// - Setting the endpoint label to a non-empty string value, updates to a new private endpoint database, when the database is disabled and re-enabled.
        /// <br/>
        /// This setting cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, dbWorkload, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "privateEndpointLabel")]
        public string PrivateEndpointLabel { get; set; }
        
        /// <value>
        /// The private endpoint Ip address for the resource.
        /// </value>
        [JsonProperty(PropertyName = "privateEndpointIp")]
        public string PrivateEndpointIp { get; set; }
        
        /// <value>
        /// A valid Oracle Database version for Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "dbVersion")]
        public string DbVersion { get; set; }
        
        /// <value>
        /// Indicates if the Autonomous Database version is a preview version.
        /// </value>
        [JsonProperty(PropertyName = "isPreview")]
        public System.Nullable<bool> IsPreview { get; set; }
                ///
        /// <value>
        /// The Autonomous Database workload type. The following values are valid:
        /// <br/>
        /// - OLTP - indicates an Autonomous Transaction Processing database
        /// - DW - indicates an Autonomous Data Warehouse database
        /// - AJD - indicates an Autonomous JSON Database
        /// - APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
        /// 
        /// </value>
        ///
        public enum DbWorkloadEnum {
            [EnumMember(Value = "OLTP")]
            Oltp,
            [EnumMember(Value = "DW")]
            Dw,
            [EnumMember(Value = "AJD")]
            Ajd,
            [EnumMember(Value = "APEX")]
            Apex
        };

        /// <value>
        /// The Autonomous Database workload type. The following values are valid:
        /// <br/>
        /// - OLTP - indicates an Autonomous Transaction Processing database
        /// - DW - indicates an Autonomous Data Warehouse database
        /// - AJD - indicates an Autonomous JSON Database
        /// - APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbWorkload")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DbWorkloadEnum> DbWorkload { get; set; }
        
        /// <value>
        /// Autonomous Database for Developers are fixed-shape Autonomous Databases that developers can use to build and test new applications. On Serverless, these are low-cost and billed per instance, on Dedicated and Cloud@Customer there is no additional cost to create Developer databases. Developer databases come with limited resources and is not intended for large-scale testing and production deployments. When you need more compute or storage resources, you may upgrade to a full paid production database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isDevTier")]
        public System.Nullable<bool> IsDevTier { get; set; }
        
        /// <value>
        /// Indicates if the database-level access control is enabled.
        /// If disabled, database access is defined by the network security rules.
        /// If enabled, database access is restricted to the IP addresses defined by the rules specified with the `whitelistedIps` property. While specifying `whitelistedIps` rules is optional,
        ///  if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the `UpdateAutonomousDatabase` API operation or edit option in console.
        /// When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
        /// <br/>
        /// This property is applicable only to Autonomous Databases on the Exadata Cloud@Customer platform. For Autonomous Database Serverless instances, `whitelistedIps` is used.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAccessControlEnabled")]
        public System.Nullable<bool> IsAccessControlEnabled { get; set; }
        
        /// <value>
        /// The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer.
        /// Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
        /// If `arePrimaryWhitelistedIpsUsed` is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
        /// <br/>
        /// For Autonomous Database Serverless, this is an array of CIDR (classless inter-domain routing) notations for a subnet or VCN OCID (virtual cloud network Oracle Cloud ID).
        /// Multiple IPs and VCN OCIDs should be separate strings separated by commas, but if it\u2019s other configurations that need multiple pieces of information then its each piece is connected with semicolon (;) as a delimiter.
        /// Example: [&quot;1.1.1.1&quot;,&quot;1.1.1.0/24&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id>&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id1>;1.1.1.1&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id2>;1.1.0.0/16&quot;]For Exadata Cloud@Customer, this is an array of IP addresses or CIDR notations.
        /// </value>
        [JsonProperty(PropertyName = "whitelistedIps")]
        public System.Collections.Generic.List<string> WhitelistedIps { get; set; }
        
        /// <value>
        /// This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled.
        /// It's value would be `TRUE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby.
        /// It's value would be `FALSE` if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "arePrimaryWhitelistedIpsUsed")]
        public System.Nullable<bool> ArePrimaryWhitelistedIpsUsed { get; set; }
        
        /// <value>
        /// The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer.
        /// Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
        /// If `arePrimaryWhitelistedIpsUsed` is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
        /// <br/>
        /// For Autonomous Database Serverless, this is an array of CIDR (classless inter-domain routing) notations for a subnet or VCN OCID (virtual cloud network Oracle Cloud ID).
        /// Multiple IPs and VCN OCIDs should be separate strings separated by commas, but if it\u2019s other configurations that need multiple pieces of information then its each piece is connected with semicolon (;) as a delimiter.
        /// Example: [&quot;1.1.1.1&quot;,&quot;1.1.1.0/24&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id>&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id1>;1.1.1.1&quot;,&quot;ocid1.vcn.oc1.sea.<unique_id2>;1.1.0.0/16&quot;]For Exadata Cloud@Customer, this is an array of IP addresses or CIDR notations.
        /// </value>
        [JsonProperty(PropertyName = "standbyWhitelistedIps")]
        public System.Collections.Generic.List<string> StandbyWhitelistedIps { get; set; }
        
        /// <value>
        /// Information about Oracle APEX Application Development.
        /// </value>
        [JsonProperty(PropertyName = "apexDetails")]
        public AutonomousDatabaseApex ApexDetails { get; set; }
        
        /// <value>
        /// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `TRUE`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAutoScalingEnabled")]
        public System.Nullable<bool> IsAutoScalingEnabled { get; set; }
                ///
        /// <value>
        /// Status of the Data Safe registration for this Autonomous Database.
        /// </value>
        ///
        public enum DataSafeStatusEnum {
            [EnumMember(Value = "REGISTERING")]
            Registering,
            [EnumMember(Value = "REGISTERED")]
            Registered,
            [EnumMember(Value = "DEREGISTERING")]
            Deregistering,
            [EnumMember(Value = "NOT_REGISTERED")]
            NotRegistered,
            [EnumMember(Value = "FAILED")]
            Failed
        };

        /// <value>
        /// Status of the Data Safe registration for this Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "dataSafeStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DataSafeStatusEnum> DataSafeStatus { get; set; }
                ///
        /// <value>
        /// Status of Operations Insights for this Autonomous Database.
        /// </value>
        ///
        public enum OperationsInsightsStatusEnum {
            [EnumMember(Value = "ENABLING")]
            Enabling,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLING")]
            Disabling,
            [EnumMember(Value = "NOT_ENABLED")]
            NotEnabled,
            [EnumMember(Value = "FAILED_ENABLING")]
            FailedEnabling,
            [EnumMember(Value = "FAILED_DISABLING")]
            FailedDisabling
        };

        /// <value>
        /// Status of Operations Insights for this Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "operationsInsightsStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<OperationsInsightsStatusEnum> OperationsInsightsStatus { get; set; }
                ///
        /// <value>
        /// Status of Database Management for this Autonomous Database.
        /// </value>
        ///
        public enum DatabaseManagementStatusEnum {
            [EnumMember(Value = "ENABLING")]
            Enabling,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLING")]
            Disabling,
            [EnumMember(Value = "NOT_ENABLED")]
            NotEnabled,
            [EnumMember(Value = "FAILED_ENABLING")]
            FailedEnabling,
            [EnumMember(Value = "FAILED_DISABLING")]
            FailedDisabling
        };

        /// <value>
        /// Status of Database Management for this Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "databaseManagementStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DatabaseManagementStatusEnum> DatabaseManagementStatus { get; set; }
        
        /// <value>
        /// The date and time when maintenance will begin.
        /// </value>
        [JsonProperty(PropertyName = "timeMaintenanceBegin")]
        public System.Nullable<System.DateTime> TimeMaintenanceBegin { get; set; }
        
        /// <value>
        /// The date and time when maintenance will end.
        /// </value>
        [JsonProperty(PropertyName = "timeMaintenanceEnd")]
        public System.Nullable<System.DateTime> TimeMaintenanceEnd { get; set; }
        
        /// <value>
        /// The component chosen for maintenance.
        /// </value>
        [JsonProperty(PropertyName = "maintenanceTargetComponent")]
        public string MaintenanceTargetComponent { get; set; }
        
        /// <value>
        /// Indicates if the Autonomous Database is a refreshable clone.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isRefreshableClone")]
        public System.Nullable<bool> IsRefreshableClone { get; set; }
        
        /// <value>
        /// The date and time when last refresh happened.
        /// </value>
        [JsonProperty(PropertyName = "timeOfLastRefresh")]
        public System.Nullable<System.DateTime> TimeOfLastRefresh { get; set; }
        
        /// <value>
        /// The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
        /// </value>
        [JsonProperty(PropertyName = "timeOfLastRefreshPoint")]
        public System.Nullable<System.DateTime> TimeOfLastRefreshPoint { get; set; }
        
        /// <value>
        /// The date and time of next refresh.
        /// </value>
        [JsonProperty(PropertyName = "timeOfNextRefresh")]
        public System.Nullable<System.DateTime> TimeOfNextRefresh { get; set; }
                ///
        /// <value>
        /// Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        ///
        public enum OpenModeEnum {
            [EnumMember(Value = "READ_ONLY")]
            ReadOnly,
            [EnumMember(Value = "READ_WRITE")]
            ReadWrite
        };

        /// <value>
        /// Indicates the Autonomous Database mode. The database can be opened in `READ_ONLY` or `READ_WRITE` mode.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "openMode")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<OpenModeEnum> OpenMode { get; set; }
                ///
        /// <value>
        /// The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
        /// </value>
        ///
        public enum RefreshableStatusEnum {
            [EnumMember(Value = "REFRESHING")]
            Refreshing,
            [EnumMember(Value = "NOT_REFRESHING")]
            NotRefreshing
        };

        /// <value>
        /// The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "refreshableStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<RefreshableStatusEnum> RefreshableStatus { get; set; }
                ///
        /// <value>
        /// The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
        /// </value>
        ///
        public enum RefreshableModeEnum {
            [EnumMember(Value = "AUTOMATIC")]
            Automatic,
            [EnumMember(Value = "MANUAL")]
            Manual
        };

        /// <value>
        /// The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "refreshableMode")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<RefreshableModeEnum> RefreshableMode { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the source Autonomous Database that was cloned to create the current Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "sourceId")]
        public string SourceId { get; set; }
                ///
        /// <value>
        /// The Autonomous Database permission level. Restricted mode allows access only by admin users.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        ///
        public enum PermissionLevelEnum {
            [EnumMember(Value = "RESTRICTED")]
            Restricted,
            [EnumMember(Value = "UNRESTRICTED")]
            Unrestricted
        };

        /// <value>
        /// The Autonomous Database permission level. Restricted mode allows access only by admin users.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "permissionLevel")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<PermissionLevelEnum> PermissionLevel { get; set; }
        
        /// <value>
        /// The timestamp of the last switchover operation for the Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "timeOfLastSwitchover")]
        public System.Nullable<System.DateTime> TimeOfLastSwitchover { get; set; }
        
        /// <value>
        /// The timestamp of the last failover operation.
        /// </value>
        [JsonProperty(PropertyName = "timeOfLastFailover")]
        public System.Nullable<System.DateTime> TimeOfLastFailover { get; set; }
        
        /// <value>
        /// **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isDataGuardEnabled")]
        public System.Nullable<bool> IsDataGuardEnabled { get; set; }
        
        /// <value>
        /// Indicates the number of seconds of data loss for a Data Guard failover.
        /// </value>
        [JsonProperty(PropertyName = "failedDataRecoveryInSeconds")]
        public System.Nullable<int> FailedDataRecoveryInSeconds { get; set; }
        
        /// <value>
        /// **Deprecated** Autonomous Data Guard standby database details.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "standbyDb")]
        public AutonomousDatabaseStandbySummary StandbyDb { get; set; }
        
        /// <value>
        /// Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "isLocalDataGuardEnabled")]
        public System.Nullable<bool> IsLocalDataGuardEnabled { get; set; }
        
        /// <value>
        /// Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "isRemoteDataGuardEnabled")]
        public System.Nullable<bool> IsRemoteDataGuardEnabled { get; set; }
        
        [JsonProperty(PropertyName = "localStandbyDb")]
        public AutonomousDatabaseStandbySummary LocalStandbyDb { get; set; }
                ///
        /// <value>
        /// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
        /// 
        /// </value>
        ///
        public enum RoleEnum {
            [EnumMember(Value = "PRIMARY")]
            Primary,
            [EnumMember(Value = "STANDBY")]
            Standby,
            [EnumMember(Value = "DISABLED_STANDBY")]
            DisabledStandby,
            [EnumMember(Value = "BACKUP_COPY")]
            BackupCopy,
            [EnumMember(Value = "SNAPSHOT_STANDBY")]
            SnapshotStandby
        };

        /// <value>
        /// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "role")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<RoleEnum> Role { get; set; }
        
        /// <value>
        /// List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
        /// </value>
        [JsonProperty(PropertyName = "availableUpgradeVersions")]
        public System.Collections.Generic.List<string> AvailableUpgradeVersions { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
        /// </value>
        [JsonProperty(PropertyName = "keyStoreId")]
        public string KeyStoreId { get; set; }
        
        /// <value>
        /// The wallet name for Oracle Key Vault.
        /// </value>
        [JsonProperty(PropertyName = "keyStoreWalletName")]
        public string KeyStoreWalletName { get; set; }
        
        /// <value>
        /// The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the `timeOfAutoRefreshStart` parameter.
        /// </value>
        [JsonProperty(PropertyName = "autoRefreshFrequencyInSeconds")]
        public System.Nullable<int> AutoRefreshFrequencyInSeconds { get; set; }
        
        /// <value>
        /// The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
        /// </value>
        [JsonProperty(PropertyName = "autoRefreshPointLagInSeconds")]
        public System.Nullable<int> AutoRefreshPointLagInSeconds { get; set; }
        
        /// <value>
        /// The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the `autoRefreshFrequencyInSeconds` parameter.
        /// </value>
        [JsonProperty(PropertyName = "timeOfAutoRefreshStart")]
        public System.Nullable<System.DateTime> TimeOfAutoRefreshStart { get; set; }
        
        /// <value>
        /// The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "supportedRegionsToCloneTo")]
        public System.Collections.Generic.List<string> SupportedRegionsToCloneTo { get; set; }
        
        /// <value>
        /// Customer Contacts.
        /// </value>
        [JsonProperty(PropertyName = "customerContacts")]
        public System.Collections.Generic.List<CustomerContact> CustomerContacts { get; set; }
        
        /// <value>
        /// The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
        /// </value>
        [JsonProperty(PropertyName = "timeLocalDataGuardEnabled")]
        public System.Nullable<System.DateTime> TimeLocalDataGuardEnabled { get; set; }
                ///
        /// <value>
        /// **Deprecated.** The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless, Autonomous Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. The standby regions in Autonomous Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Autonomous Data Guard association, and cannot be performed when the database using the primary role is operating in a remote Autonomous Data Guard standby region.
        /// 
        /// </value>
        ///
        public enum DataguardRegionTypeEnum {
            [EnumMember(Value = "PRIMARY_DG_REGION")]
            PrimaryDgRegion,
            [EnumMember(Value = "REMOTE_STANDBY_DG_REGION")]
            RemoteStandbyDgRegion
        };

        /// <value>
        /// **Deprecated.** The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless, Autonomous Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. The standby regions in Autonomous Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Autonomous Data Guard association, and cannot be performed when the database using the primary role is operating in a remote Autonomous Data Guard standby region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dataguardRegionType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DataguardRegionTypeEnum> DataguardRegionType { get; set; }
        
        /// <value>
        /// The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the \"primary\" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
        /// </value>
        [JsonProperty(PropertyName = "timeDataGuardRoleChanged")]
        public System.Nullable<System.DateTime> TimeDataGuardRoleChanged { get; set; }
        
        /// <value>
        /// The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
        /// </value>
        [JsonProperty(PropertyName = "peerDbIds")]
        public System.Collections.Generic.List<string> PeerDbIds { get; set; }
        
        /// <value>
        /// Specifies if the Autonomous Database requires mTLS connections.
        /// <br/>
        /// This may not be updated in parallel with any of the following: licenseModel, databaseEdition, cpuCoreCount, computeCount, dataStorageSizeInTBs, whitelistedIps, openMode, permissionLevel, db-workload, privateEndpointLabel, nsgIds, customerContacts, dbVersion, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
        /// <br/>
        /// Service Change: The default value of the isMTLSConnectionRequired attribute will change from true to false on July 1, 2023 in the following APIs:
        /// - CreateAutonomousDatabase
        /// - GetAutonomousDatabase
        /// - UpdateAutonomousDatabase
        /// Details: Prior to the July 1, 2023 change, the isMTLSConnectionRequired attribute default value was true. This applies to Autonomous Database Serverless.
        /// Does this impact me? If you use or maintain custom scripts or Terraform scripts referencing the CreateAutonomousDatabase, GetAutonomousDatabase, or UpdateAutonomousDatabase APIs, you want to check, and possibly modify, the scripts for the changed default value of the attribute. Should you choose not to leave your scripts unchanged, the API calls containing this attribute will continue to work, but the default value will switch from true to false.
        /// How do I make this change? Using either OCI SDKs or command line tools, update your custom scripts to explicitly set the isMTLSConnectionRequired attribute to true.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isMtlsConnectionRequired")]
        public System.Nullable<bool> IsMtlsConnectionRequired { get; set; }
        
        /// <value>
        /// The time the member joined the resource pool.
        /// </value>
        [JsonProperty(PropertyName = "timeOfJoiningResourcePool")]
        public System.Nullable<System.DateTime> TimeOfJoiningResourcePool { get; set; }
        
        /// <value>
        /// The unique identifier for leader autonomous database OCID [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
        /// </value>
        [JsonProperty(PropertyName = "resourcePoolLeaderId")]
        public string ResourcePoolLeaderId { get; set; }
        
        [JsonProperty(PropertyName = "resourcePoolSummary")]
        public ResourcePoolSummary ResourcePoolSummary { get; set; }
        
        /// <value>
        /// Indicates if the refreshable clone can be reconnected to its source database.
        /// </value>
        [JsonProperty(PropertyName = "isReconnectCloneEnabled")]
        public System.Nullable<bool> IsReconnectCloneEnabled { get; set; }
        
        /// <value>
        /// The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
        /// </value>
        [JsonProperty(PropertyName = "timeUntilReconnectCloneEnabled")]
        public System.Nullable<System.DateTime> TimeUntilReconnectCloneEnabled { get; set; }
                ///
        /// <value>
        /// The maintenance schedule type of the Autonomous Database Serverless. An EARLY maintenance schedule
        /// follows a schedule applying patches prior to the REGULAR schedule. A REGULAR maintenance schedule follows the normal cycle
        /// 
        /// </value>
        ///
        public enum AutonomousMaintenanceScheduleTypeEnum {
            [EnumMember(Value = "EARLY")]
            Early,
            [EnumMember(Value = "REGULAR")]
            Regular
        };

        /// <value>
        /// The maintenance schedule type of the Autonomous Database Serverless. An EARLY maintenance schedule
        /// follows a schedule applying patches prior to the REGULAR schedule. A REGULAR maintenance schedule follows the normal cycle
        /// 
        /// </value>
        [JsonProperty(PropertyName = "autonomousMaintenanceScheduleType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<AutonomousMaintenanceScheduleTypeEnum> AutonomousMaintenanceScheduleType { get; set; }
        
        /// <value>
        /// The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "scheduledOperations")]
        public System.Collections.Generic.List<ScheduledOperationDetails> ScheduledOperations { get; set; }
        
        /// <value>
        /// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `FALSE`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAutoScalingForStorageEnabled")]
        public System.Nullable<bool> IsAutoScalingForStorageEnabled { get; set; }
        
        /// <value>
        /// The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
        /// <br/>
        /// **Note:** Auto-scaling does not automatically decrease allocated storage when data is deleted from the database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "allocatedStorageSizeInTBs")]
        public System.Double AllocatedStorageSizeInTBs { get; set; }
        
        /// <value>
        /// The current amount of storage in use for user and system data, in terabytes (TB).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "actualUsedDataStorageSizeInTBs")]
        public System.Double ActualUsedDataStorageSizeInTBs { get; set; }
                ///
        /// <value>
        /// The Oracle Database Edition that applies to the Autonomous databases.
        /// 
        /// </value>
        ///
        public enum DatabaseEditionEnum {
            [EnumMember(Value = "STANDARD_EDITION")]
            StandardEdition,
            [EnumMember(Value = "ENTERPRISE_EDITION")]
            EnterpriseEdition
        };

        /// <value>
        /// The Oracle Database Edition that applies to the Autonomous databases.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "databaseEdition")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DatabaseEditionEnum> DatabaseEdition { get; set; }
        
        /// <value>
        /// The list of database tools details.
        /// <br/>
        /// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, dbVersion, isRefreshable, dbName, scheduledOperations, isLocalDataGuardEnabled, or isFreeTier.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbToolsDetails")]
        public System.Collections.Generic.List<DatabaseTool> DbToolsDetails { get; set; }
        
        /// <value>
        /// Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.
        /// Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.
        /// Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "localDisasterRecoveryType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DisasterRecoveryConfiguration.DisasterRecoveryTypeEnum> LocalDisasterRecoveryType { get; set; }
                ///
        /// <value>
        /// **Deprecated.** The disaster recovery (DR) region type of the Autonomous Database. For Autonomous Database Serverless instances, DR associations have designated primary and standby regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
        /// 
        /// </value>
        ///
        public enum DisasterRecoveryRegionTypeEnum {
            [EnumMember(Value = "PRIMARY")]
            Primary,
            [EnumMember(Value = "REMOTE")]
            Remote
        };

        /// <value>
        /// **Deprecated.** The disaster recovery (DR) region type of the Autonomous Database. For Autonomous Database Serverless instances, DR associations have designated primary and standby regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "disasterRecoveryRegionType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DisasterRecoveryRegionTypeEnum> DisasterRecoveryRegionType { get; set; }
        
        /// <value>
        /// The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
        /// </value>
        [JsonProperty(PropertyName = "timeDisasterRecoveryRoleChanged")]
        public System.Nullable<System.DateTime> TimeDisasterRecoveryRoleChanged { get; set; }
        
        [JsonProperty(PropertyName = "remoteDisasterRecoveryConfiguration")]
        public DisasterRecoveryConfiguration RemoteDisasterRecoveryConfiguration { get; set; }
                ///
        /// <value>
        /// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
        /// 
        /// </value>
        ///
        public enum NetServicesArchitectureEnum {
            [EnumMember(Value = "DEDICATED")]
            Dedicated,
            [EnumMember(Value = "SHARED")]
            Shared
        };

        /// <value>
        /// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "netServicesArchitecture")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<NetServicesArchitectureEnum> NetServicesArchitecture { get; set; }
        
        /// <value>
        /// The availability domain where the Autonomous Database Serverless instance is located.
        /// </value>
        [JsonProperty(PropertyName = "availabilityDomain")]
        public string AvailabilityDomain { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Autonomous Serverless Database.
        /// </value>
        [JsonProperty(PropertyName = "clusterPlacementGroupId")]
        public string ClusterPlacementGroupId { get; set; }
        
        /// <value>
        /// A list of the source Autonomous Database's table space number(s) used to create this partial clone from the backup.
        /// </value>
        [JsonProperty(PropertyName = "cloneTableSpaceList")]
        public System.Collections.Generic.List<int> CloneTableSpaceList { get; set; }
                ///
        /// <value>
        /// The Autonomous Database clone type.
        /// </value>
        ///
        public enum CloneTypeEnum {
            [EnumMember(Value = "FULL")]
            Full,
            [EnumMember(Value = "METADATA")]
            Metadata,
            [EnumMember(Value = "PARTIAL")]
            Partial
        };

        /// <value>
        /// The Autonomous Database clone type.
        /// </value>
        [JsonProperty(PropertyName = "cloneType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<CloneTypeEnum> CloneType { get; set; }
        
        /// <value>
        /// Additional attributes for this resource. Each attribute is a simple key-value pair with no predefined name, type, or namespace.
        /// Example: { &quot;gcpAccountName&quot;: &quot;gcpName&quot; }
        /// </value>
        [JsonProperty(PropertyName = "additionalAttributes")]
        public System.Collections.Generic.Dictionary<string, string> AdditionalAttributes { get; set; }
        
    }
}
