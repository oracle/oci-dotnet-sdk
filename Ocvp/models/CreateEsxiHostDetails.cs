/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OcvpService.Models
{
    /// <summary>
    /// Details of the ESXi host to add to the Cluster.
    /// </summary>
    public class CreateEsxiHostDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Cluster to add the ESXi host to.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterId is required.")]
        [JsonProperty(PropertyName = "clusterId")]
        public string ClusterId { get; set; }
        
        /// <value>
        /// A descriptive name for the ESXi host. It's changeable.
        /// Esxi Host name requirements are 1-25 character length limit, Must start with a letter, 
        /// Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the Cluster.
        /// <br/>
        /// If this attribute is not specified, the Cluster's `instanceDisplayNamePrefix` attribute is used
        /// to name and incrementally number the ESXi host. For example, if you're creating the fourth
        /// ESXi host in the Cluster, and `instanceDisplayNamePrefix` is `MyCluster`, the host's display
        /// name is `MyCluster-4`.
        /// <br/>
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the deleted ESXi Host with LeftOver billing cycle.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "billingDonorHostId")]
        public string BillingDonorHostId { get; set; }
        
        /// <value>
        /// The billing option currently used by the ESXi host.
        /// {@link #listSupportedCommitments(ListSupportedCommitmentsRequest) listSupportedCommitments}.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "currentCommitment")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<Commitment> CurrentCommitment { get; set; }
        
        /// <value>
        /// The billing option to switch to after the existing billing cycle ends.
        /// If `nextCommitment` is null or empty, `currentCommitment` continues to the next billing cycle.
        /// {@link #listSupportedCommitments(ListSupportedCommitmentsRequest) listSupportedCommitments}.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "nextCommitment")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<Commitment> NextCommitment { get; set; }
        
        /// <value>
        /// The availability domain to create the ESXi host in.
        /// If keep empty, for AD-specific Cluster, new ESXi host will be created in the same availability domain;
        /// for multi-AD Cluster, new ESXi host will be auto assigned to the next availability domain following evenly distribution strategy.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "computeAvailabilityDomain")]
        public string ComputeAvailabilityDomain { get; set; }
        
        /// <value>
        /// The compute shape name of the ESXi host.
        /// {@link #listSupportedHostShapes(ListSupportedHostShapesRequest) listSupportedHostShapes}.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "hostShapeName")]
        public string HostShapeName { get; set; }
        
        /// <value>
        /// The OCPU count of the ESXi host.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "hostOcpuCount")]
        public System.Nullable<float> HostOcpuCount { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "capacityReservationId")]
        public string CapacityReservationId { get; set; }
        
        /// <value>
        /// The ESXi software bundle to install on the ESXi host. 
        /// Only versions under the same vmwareSoftwareVersion and have been validate by Oracle Cloud VMware Solution will be accepted.
        /// To get a list of the available versions, use
        /// {@link #listSupportedVmwareSoftwareVersions(ListSupportedVmwareSoftwareVersionsRequest) listSupportedVmwareSoftwareVersions}.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "esxiSoftwareVersion")]
        public string EsxiSoftwareVersion { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no
        /// predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
